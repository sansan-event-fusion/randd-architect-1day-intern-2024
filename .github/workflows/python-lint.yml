name: "Python Lint"

on:
  pull_request:
    types: [synchronize, opened]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  ruff-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Linter
        uses: ./.github/actions/setup-linter

      - name: lint check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run ruff check . | reviewdog \
            -f=flake8 \
            -name="ruff(lint)" \
            -reporter=github-pr-review \
            -filter-mode=file \
            -fail-on-error=true \
            -level=warning

  ruff-check-diff:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Linter
        uses: ./.github/actions/setup-linter

      - name: ruff check diff
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run ruff check --diff . | reviewdog \
            -f=diff \
            -f.diff.strip=0 \
            -name="ruff(diff)" \
            -reporter=github-pr-review \
            -filter-mode=file \
            -fail-on-error=true \
            -level=warning

  ruff-format-diff:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Linter
        uses: ./.github/actions/setup-linter

      - name: ruff format diff
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run ruff format --diff --check . 2>&1 | reviewdog \
            -f=diff \
            -f.diff.strip=0 \
            -name="ruff format" \
            -reporter=github-pr-review \
            -filter-mode=file \
            -fail-on-error=true \
            -level=warning

  mypy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Linter
        uses: ./.github/actions/setup-linter

      - name: mypy
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run mypy . --ignore-missing-imports \
            | reviewdog -f="mypy" \
            -name="mypy" \
            -reporter="github-pr-review" \
            -filter-mode="file" \
            -fail-on-error="true" \
            -level="error"
